Что будет делать программа?
Это будет простейший симулятор эволюции, единственная цель которого — демонстрировать зарождение порядка из хаоса путём отбора и мутаций. Более сложные симуляторы эволюции, для примера:
http://www.youtube.com/watch?feature=player_embedded&v=dN_6B1auRV4
http://biogenesis.sourceforge.net/manual.php.en
http://intelmath.narod.ru/article_gene_pool.html

Что именно моделируется?
Моделируется небольшая популяция существ, приспосабливающаяся к заданным условиям. У каждого существа есть тело, представленное таблицей, с двумя точками, заданными средой: входом и выходом. При проверки приспособленности существа в точке «вход» появляется некая «отметка», по умолчанию двигающееся вниз с каждым шагом симуляции. Однако его движение может измениться, если в геноме существа (структура вида (координата, координата): эффект) для клетки, на которой стоит «отметка», прописан эффект: к примеру, «влево», «вправо», «разделиться»... Если в результате прохода по телу существа отметка доберётся до точки выхода, к «живучести» существа прибавиться некоторое число. Общее значение «живучести» после конца симуляции определяет, выживет существо или нет. По сути, геном существа — некий алгоритм, стремящийся довести от точки «вход» до точки «выход» наибольшее кол-во «отметок» и максимизировать живучесть. 
После пробега по всем существам наименее успешные отсеиваются, в оставшихся вводятся изменения-мутации, на их основе создаются новые, и всё повторяется.

Что увидит пользователь?
Процесс прогона существ в динамике, а так же их гены в виде таблицы. Так же можно будет посмотреть график максимальной живучести по итерациям (прогон всех существ — удаление отстающих — мутации — создание новых = одна итерация) чтобы увидеть, как существа, созданные изначально случайно, под воздействием случайных же изменений постепенно достигают локального максимума. 

Как это будет работать глазами пользователя?
При запуске появляется окно ввода начальных параметров. Пользователь вводит координаты входа и выхода («бюджетный» вариант), размер таблицы тела существа, количество изначального генного кода, начальное значение, добавляемое за каждый удачный проход от «входа» до «выхода» (если будет время это реализовать), затем окно закрывается и открывается главное окно, где, собственно, и можно будет наблюдать симуляцию. (можно обойтись и вовсе без начального окна, прописав параметры в коде, если совсем не будет времени). Из главного окна можно приостановить симуляцию, запустить её после остановки, открыть график с максимальными значениями живучести. (ввести геном существа вручную, установить запрет на мутацию для наиболее приспособленных, и т. д., если будет время это сделать...). График можно только закрыть (масштабировать...)

Как это будет работать изнутри?
Работа программы будет контролироваться из объекта Управляющего класса, следящего за временем выполнения всех задач, вызывающего функции других классов. Данные о конкретном существе будут лежать в классе Creature, методы действий с существом — в классе Action, данные и методы работы с теми или иными элементами GUI – в соответствующих классах MainWindow, StartWindow, Graph. Главные параметры симуляции, в особенности задаваемые изначально пользователем, лежат в управляющем классе, куда попадают из стартового окна.

14.09.2015 
1) У объекта Существо теперь есть поле exit=(x,y) - точка выхода для данного существа. Соответственно изменены функции инициализации и копирования, а так же поправлены все их вызовы.
2) Action.Move() переделана. Теперь один её вызов соответствует полному проходу существа по всем возможным для него клаткам, а лишняя функциональность удалена.
3) Создана Action.Random_Number(n), по аналогии с Random_Simbol. Все места, где необходимо случайное число от 0 до n, переделаны.
4) Появился класс Trace - заготовка для будущей трассировки перемещения отметки по телу.
